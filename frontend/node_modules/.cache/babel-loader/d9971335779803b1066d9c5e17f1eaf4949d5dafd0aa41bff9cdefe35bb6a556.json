{"ast":null,"code":"var _jsxFileName = \"/Users/shwetamprajapati/Downloads/ecommerce/frontend/src/context/AuthContext.js\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n\n  // Set up axios interceptor for authentication\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      // Verify token validity\n      verifyToken();\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      setLoading(false);\n    }\n  }, [token]);\n  const verifyToken = async () => {\n    try {\n      // You can add a verify token endpoint or just try to get user profile\n      const response = await axios.get('/api/users/profile');\n      setUser(response.data);\n    } catch (error) {\n      console.error('Token verification failed:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/auth/signin', {\n        email,\n        password\n      });\n      const {\n        jwt\n      } = response.data;\n      setToken(jwt);\n      localStorage.setItem('token', jwt);\n\n      // Get user profile\n      const userResponse = await axios.get('/api/users/profile', {\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      setUser(userResponse.data);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login failed:', error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      };\n    }\n  };\n  const signup = async userData => {\n    try {\n      // Try backend first\n      const response = await axios.post('/auth/signup', userData);\n      const {\n        jwt\n      } = response.data;\n      setToken(jwt);\n      localStorage.setItem('token', jwt);\n\n      // Get user profile\n      const userResponse = await axios.get('/api/users/profile', {\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      setUser(userResponse.data);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Backend signup failed, using mock data:', error);\n\n      // Mock signup for frontend testing when backend is not available\n      const mockToken = 'mock-jwt-token-' + Date.now();\n      const mockUser = {\n        id: Date.now(),\n        firstName: userData.firstName,\n        lastName: userData.lastName,\n        email: userData.email,\n        role: 'CUSTOMER'\n      };\n      setToken(mockToken);\n      localStorage.setItem('token', mockToken);\n      setUser(mockUser);\n      return {\n        success: true\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    signup,\n    logout,\n    isAuthenticated: !!token\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","context","Error","AuthProvider","children","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","defaults","headers","common","verifyToken","response","get","data","error","console","logout","login","email","password","post","jwt","setItem","userResponse","Authorization","success","_error$response","_error$response$data","message","signup","userData","mockToken","Date","now","mockUser","id","firstName","lastName","role","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/shwetamprajapati/Downloads/ecommerce/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n\n  // Set up axios interceptor for authentication\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      // Verify token validity\n      verifyToken();\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      setLoading(false);\n    }\n  }, [token]);\n\n  const verifyToken = async () => {\n    try {\n      // You can add a verify token endpoint or just try to get user profile\n      const response = await axios.get('/api/users/profile');\n      setUser(response.data);\n    } catch (error) {\n      console.error('Token verification failed:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/auth/signin', {\n        email,\n        password\n      });\n      \n      const { jwt } = response.data;\n      setToken(jwt);\n      localStorage.setItem('token', jwt);\n      \n      // Get user profile\n      const userResponse = await axios.get('/api/users/profile', {\n        headers: { Authorization: `Bearer ${jwt}` }\n      });\n      setUser(userResponse.data);\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Login failed:', error);\n      return { \n        success: false, \n        error: error.response?.data?.message || 'Login failed' \n      };\n    }\n  };\n\n  const signup = async (userData) => {\n    try {\n      // Try backend first\n      const response = await axios.post('/auth/signup', userData);\n      \n      const { jwt } = response.data;\n      setToken(jwt);\n      localStorage.setItem('token', jwt);\n      \n      // Get user profile\n      const userResponse = await axios.get('/api/users/profile', {\n        headers: { Authorization: `Bearer ${jwt}` }\n      });\n      setUser(userResponse.data);\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Backend signup failed, using mock data:', error);\n      \n      // Mock signup for frontend testing when backend is not available\n      const mockToken = 'mock-jwt-token-' + Date.now();\n      const mockUser = {\n        id: Date.now(),\n        firstName: userData.firstName,\n        lastName: userData.lastName,\n        email: userData.email,\n        role: 'CUSTOMER'\n      };\n      \n      setToken(mockToken);\n      localStorage.setItem('token', mockToken);\n      setUser(mockUser);\n      \n      return { success: true };\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    signup,\n    logout,\n    isAuthenticated: !!token\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}